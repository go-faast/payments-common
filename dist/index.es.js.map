{"version":3,"file":"index.es.js","sources":["../src/types.ts"],"sourcesContent":["import * as t from 'io-ts'\nimport { requiredOptionalCodec, extendCodec, enumCodec, nullable, DateT } from '@faast/ts-common'\n\nexport const AddressOrIndex = t.union([t.string, t.number], 'AddressOrIndex')\nexport type AddressOrIndex = t.TypeOf<typeof AddressOrIndex>\n\nexport enum FeeLevel {\n  Custom = 'custom',\n  Low = 'low',\n  Medium = 'medium',\n  High = 'high',\n}\nexport const FeeLevelT = enumCodec<FeeLevel>(FeeLevel, 'FeeLevel')\n\nexport enum FeeRateType {\n  Main = 'main', // ie bitcoins, ethers\n  Base = 'base', // ie satoshis, wei\n  BasePerWeight = 'base/weight', // ie satoshis per byte, gas price (wei per gas)\n}\nexport const FeeRateTypeT = enumCodec<FeeRateType>(FeeRateType, 'FeeRateType')\n\nexport const FeeOptionCustom = requiredOptionalCodec(\n  {\n    feeRate: t.string,\n    feeRateType: FeeRateTypeT,\n  },\n  {\n    feeLevel: t.literal(FeeLevel.Custom),\n  },\n  'FeeOptionCustom',\n)\n\nexport const FeeOptionLevel = t.type(\n  {\n    feeLevel: t.union([t.literal(FeeLevel.High), t.literal(FeeLevel.Medium), t.literal(FeeLevel.Low)]),\n  },\n  'FeeOptionLevel',\n)\n\nexport const FeeOption = t.union([FeeOptionCustom, FeeOptionLevel], 'FeeOption')\nexport type FeeOption = t.TypeOf<typeof FeeOption>\n\nexport const CreateTransactionOptions = FeeOption\nexport type CreateTransactionOptions = t.TypeOf<typeof CreateTransactionOptions>\n\nexport const ResolvedFeeOption = t.type({\n  targetFeeLevel: FeeLevelT,\n  targetFeeRate: t.string,\n  targetFeeRateType: FeeRateTypeT,\n  feeBase: t.string,\n  feeMain: t.string,\n})\nexport type ResolvedFeeOption = t.TypeOf<typeof ResolvedFeeOption>\n\nexport const BalanceResult = t.type(\n  {\n    balance: t.string, // balance with at least 1 confirmation\n    unconfirmedBalance: t.string, // balance that is pending confirmation on the blockchain\n  },\n  'BalanceResult',\n)\nexport type BalanceResult = t.TypeOf<typeof BalanceResult>\n\nexport enum TransactionStatus {\n  Unsigned = 'unsigned',\n  Signed = 'signed',\n  Pending = 'pending',\n  Confirmed = 'confirmed',\n  Failed = 'failed',\n}\nexport const TransactionStatusT = enumCodec(TransactionStatus, 'TransactionStatus')\n\nexport const TransactionCommon = t.type(\n  {\n    id: nullable(t.string), // network txid\n    fromAddress: nullable(t.string), // sender address\n    toAddress: nullable(t.string), // recipient address\n    toExtraId: nullable(t.string), // eg Monero payment ID\n    fromIndex: nullable(t.number), // sender address index\n    toIndex: nullable(t.number), // recipient address index, null if not ours\n    amount: nullable(t.string), // main denomination (eg \"0.125\")\n    fee: nullable(t.string), // total fee in main denomination\n    status: TransactionStatusT,\n  },\n  'TransactionCommon',\n)\nexport type TransactionCommon = t.TypeOf<typeof TransactionCommon>\n\nconst UnsignedCommon = extendCodec(\n  TransactionCommon,\n  {\n    fromAddress: t.string,\n    toAddress: t.string,\n    fromIndex: t.number,\n    targetFeeLevel: FeeLevelT,\n    targetFeeRate: nullable(t.string),\n    targetFeeRateType: nullable(FeeRateTypeT),\n  },\n  'UnsignedCommon',\n)\n\nexport const BaseUnsignedTransaction = extendCodec(\n  UnsignedCommon,\n  {\n    status: t.literal('unsigned'),\n    data: t.UnknownRecord,\n  },\n  'BaseUnsignedTransaction',\n)\nexport type BaseUnsignedTransaction = t.TypeOf<typeof BaseUnsignedTransaction>\n\nexport const BaseSignedTransaction = extendCodec(\n  UnsignedCommon,\n  {\n    status: t.literal('signed'),\n    id: t.string,\n    amount: t.string,\n    fee: t.string,\n    data: t.UnknownRecord,\n  },\n  'BaseSignedTransaction',\n)\nexport type BaseSignedTransaction = t.TypeOf<typeof BaseSignedTransaction>\n\nexport const BaseTransactionInfo = extendCodec(\n  TransactionCommon,\n  {\n    id: t.string,\n    amount: t.string,\n    fee: t.string,\n    isExecuted: t.boolean, // true if transaction didn't fail (eg TRX/ETH contract succeeded)\n    isConfirmed: t.boolean,\n    confirmations: t.number, // 0 if not confirmed\n    block: nullable(t.number), // null if not confirmed\n    date: nullable(DateT), // null if timestamp unavailable\n    data: t.UnknownRecord,\n  },\n  'BaseTransactionInfo',\n)\nexport type BaseTransactionInfo = t.TypeOf<typeof BaseTransactionInfo>\n\nexport const BaseBroadcastResult = t.type(\n  {\n    id: t.string,\n  },\n  'BaseBroadcastResult',\n)\nexport type BaseBroadcastResult = t.TypeOf<typeof BaseBroadcastResult>\n"],"names":["t.union","t.string","t.number","t.literal","t.type","t.UnknownRecord","t.boolean"],"mappings":"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"}